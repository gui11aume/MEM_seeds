@article{pmid7265238,
    title = {{Identification of common molecular subsequences.}},
    author = {T F Smith and M S Waterman},
    journal = {{J. Mol. Biol.}},
    volume = {147},
    number = {1},
    year = {1981},
    month = mar,
    pages = {195-7},
    pubmed = {7265238},
    pii = {0022-2836(81)90087-5},
    nlmuniqueid = {2985088R}
}

@article{pmid5420325,
    title = {{A general method applicable to the search for similarities in the amino acid sequence of two proteins.}},
    author = {S B Needleman and C D Wunsch},
    journal = {{J. Mol. Biol.}},
    volume = {48},
    number = {3},
    year = {1970},
    month = mar,
    pages = {443-53},
    pubmed = {5420325},
    pii = {0022-2836(70)90057-4},
    nlmuniqueid = {2985088R}
}

@article{pmid2231712,
    title = {{Basic local alignment search tool.}},
    author = {S F Altschul and W Gish and W Miller and E W Myers and D J Lipman},
    journal = {{J. Mol. Biol.}},
    volume = {215},
    number = {3},
    year = {1990},
    month = oct,
    pages = {403-10},
    abstract = {A new approach to rapid sequence comparison, basic local alignment search tool (BLAST), directly approximates alignments that optimize a measure of local similarity, the maximal segment pair (MSP) score. Recent mathematical results on the stochastic properties of MSP scores allow an analysis of the performance of this method as well as the statistical significance of alignments it generates. The basic algorithm is simple and robust; it can be implemented in a number of ways and applied in a variety of contexts including straightforward DNA and protein sequence database searches, motif searches, gene identification searches, and in the analysis of multiple regions of similarity in long DNA sequences. In addition to its flexibility and tractability to mathematical analysis, BLAST is an order of magnitude faster than existing sequence comparison tools of comparable sensitivity.},
    pubmed = {2231712},
    doi = {10.1016/S0022-2836(05)80360-2},
    pii = {S0022-2836(05)80360-2},
    nlmuniqueid = {2985088R}
}

@article{pmid16533404,
    title = {{Choosing the best heuristic for seeded alignment of DNA sequences.}},
    author = {Yanni Sun and Jeremy Buhler},
    journal = {{BMC Bioinformatics}},
    volume = {7},
    year = {2006},
    month = mar,
    pages = {133},
    abstract = {Seeded alignment is an important component of algorithms for fast, large-scale DNA similarity search. A good seed matching heuristic can reduce the execution time of genomic-scale sequence comparison without degrading sensitivity. Recently, many types of seed have been proposed to improve on the performance of traditional contiguous seeds as used in, e.g., NCBI BLASTN. Choosing among these seed types, particularly those that use information besides the presence or absence of matching residue pairs, requires practical guidance based on a rigorous comparison, including assessment of sensitivity, specificity, and computational efficiency. This work performs such a comparison, focusing on alignments in DNA outside widely studied coding regions.},
    pubmed = {16533404},
    pii = {1471-2105-7-133},
    doi = {10.1186/1471-2105-7-133},
    pmc = {PMC1468433},
    nlmuniqueid = {100965194}
}

@article{pmid20460430,
    title = {{A survey of sequence alignment algorithms for next-generation sequencing.}},
    author = {Heng Li and Nils Homer},
    journal = {{Brief. Bioinformatics}},
    volume = {11},
    number = {5},
    year = {2010},
    month = sep,
    pages = {473-83},
    abstract = {Rapidly evolving sequencing technologies produce data on an unparalleled scale. A central challenge to the analysis of this data is sequence alignment, whereby sequence reads must be compared to a reference. A wide variety of alignment algorithms and software have been subsequently developed over the past two years. In this article, we will systematically review the current development of these algorithms and introduce their practical applications on different types of experimental data. We come to the conclusion that short-read alignment is no longer the bottleneck of data analyses. We also consider future development of alignment algorithms with respect to emerging long sequence reads and the prospect of cloud computing.},
    pubmed = {20460430},
    pii = {bbq015},
    doi = {10.1093/bib/bbq015},
    pmc = {PMC2943993},
    nlmuniqueid = {100912837}
}

@article{pmid11934743,
    title = {{PatternHunter: faster and more sensitive homology search.}},
    author = {Bin Ma and John Tromp and Ming Li},
    journal = {{Bioinformatics}},
    volume = {18},
    number = {3},
    year = {2002},
    month = mar,
    pages = {440-5},
    abstract = {Genomics and proteomics studies routinely depend on homology searches based on the strategy of finding short seed matches which are then extended. The exploding genomic data growth presents a dilemma for DNA homology search techniques: increasing seed size decreases sensitivity whereas decreasing seed size slows down computation.},
    pubmed = {11934743},
    nlmuniqueid = {9808944}
}

@article{pmid22388286,
    title = {{Fast gapped-read alignment with Bowtie 2.}},
    author = {Ben Langmead and Steven L Salzberg},
    journal = {{Nat. Methods}},
    volume = {9},
    number = {4},
    year = {2012},
    month = mar,
    pages = {357-9},
    abstract = {As the rate of sequencing increases, greater throughput is demanded from read aligners. The full-text minute index is often used to make alignment very fast and memory-efficient, but the approach is ill-suited to finding longer, gapped alignments. Bowtie 2 combines the strengths of the full-text minute index with the flexibility and speed of hardware-accelerated dynamic programming algorithms to achieve a combination of high speed, sensitivity and accuracy.},
    pubmed = {22388286},
    pii = {nmeth.1923},
    doi = {10.1038/nmeth.1923},
    pmc = {PMC3322381},
    mid = {NIHMS366740},
    nlmuniqueid = {101215604}
}

@article{pmid24336412,
    title = {{slaMEM: efficient retrieval of maximal exact matches using a sampled LCP array.}},
    author = {Francisco Fernandes and Ana T Freitas},
    journal = {{Bioinformatics}},
    volume = {30},
    number = {4},
    year = {2014},
    month = feb,
    pages = {464-71},
    abstract = {Maximal exact matches, or just MEMs, are a powerful tool in the context of multiple sequence alignment and approximate string matching. The most efficient algorithms to collect them are based on compressed indexes that rely on longest common prefix array-centered data structures. However, their space-efficient representations make use of encoding techniques that are expensive from a computational point of view. With the deluge of data generated by high-throughput sequencing, new approaches need to be developed to deal with larger genomic sequences.},
    pubmed = {24336412},
    pii = {btt706},
    doi = {10.1093/bioinformatics/btt706},
    nlmuniqueid = {9808944}
}

@article{pmid25399029,
    title = {{E-MEM: efficient computation of maximal exact matches for very large genomes.}},
    author = {Nilesh Khiste and Lucian Ilie},
    journal = {{Bioinformatics}},
    volume = {31},
    number = {4},
    year = {2015},
    month = feb,
    pages = {509-14},
    abstract = {Alignment of similar whole genomes is often performed using anchors given by the maximal exact matches (MEMs) between their sequences. In spite of significant amount of research on this problem, the computation of MEMs for large genomes remains a challenging problem. The leading current algorithms employ full text indexes, the sparse suffix array giving the best results. Still, their memory requirements are high, the parallelization is not very efficient, and they cannot handle very large genomes.},
    pubmed = {25399029},
    pii = {btu687},
    doi = {10.1093/bioinformatics/btu687},
    nlmuniqueid = {9808944}
}

@article{pmid23349213,
    title = {{essaMEM: finding maximal exact matches using enhanced sparse suffix arrays.}},
    author = {MichaÃ«l Vyverman and Bernard De Baets and Veerle Fack and Peter Dawyndt},
    journal = {{Bioinformatics}},
    volume = {29},
    number = {6},
    year = {2013},
    month = mar,
    pages = {802-4},
    abstract = {We have developed essaMEM, a tool for finding maximal exact matches that can be used in genome comparison and read mapping. essaMEM enhances an existing sparse suffix array implementation with a sparse child array. Tests indicate that the enhanced algorithm for finding maximal exact matches is much faster, while maintaining the same memory footprint. In this way, sparse suffix arrays remain competitive with the more complex compressed suffix arrays.},
    pubmed = {23349213},
    pii = {btt042},
    doi = {10.1093/bioinformatics/btt042},
    nlmuniqueid = {9808944}
}

@article{pmid19389736,
    title = {{A practical algorithm for finding maximal exact matches in large sequence datasets using sparse suffix arrays.}},
    author = {Zia Khan and Joshua S Bloom and Leonid Kruglyak and Mona Singh},
    journal = {{Bioinformatics}},
    volume = {25},
    number = {13},
    year = {2009},
    month = jul,
    pages = {1609-16},
    abstract = {High-throughput sequencing technologies place ever increasing demands on existing algorithms for sequence analysis. Algorithms for computing maximal exact matches (MEMs) between sequences appear in two contexts where high-throughput sequencing will vastly increase the volume of sequence data: (i) seeding alignments of high-throughput reads for genome assembly and (ii) designating anchor points for genome-genome comparisons.},
    pubmed = {19389736},
    pii = {btp275},
    doi = {10.1093/bioinformatics/btp275},
    pmc = {PMC2732316},
    nlmuniqueid = {9808944}
}

